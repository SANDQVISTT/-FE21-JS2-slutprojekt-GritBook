{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,mCAIO,MAAMC,EAEXC,YACkBC,EACAC,EACAC,EACAC,QAHAH,GAAAA,OACAC,SAAAA,OACAC,QAAAA,OACAC,UAAAA,EAGhBC,KAAKC,aAECA,aAGN,MAAMC,EAAaC,SAASC,eAAe,iBAErCC,EAAeF,SAASG,cAAc,OAC5CJ,EAAWK,OAAOF,GAElBA,EAAaG,UAAUC,IAAIT,KAAKJ,GAAI,gBAGpC,MAAMc,EAAkBP,SAASG,cAAc,MAE/CI,EAAgBC,UAAYX,KAAKD,UAAY,GAAGC,KAAKH,iBAAiBG,KAAKF,UAC3EO,EAAaE,OAAOG,GAGpB,MAAME,EAAYT,SAASG,cAAc,UACzCM,EAAUD,UAAY,IAElBX,KAAKH,UAAYgB,eAAeC,QAAQ,SAE1CT,EAAaE,OAAOK,GAItBA,EAAUG,iBAAiB,SAAS,KAIlC,GAFiBF,eAAeC,QAAQ,SAExBD,eAAeC,QAAQ,QACvC,CAEE,MAAME,EAASxB,EAAAyB,IAAIC,EAAAC,GAAI,iBAAmBnB,KAAKJ,IAC/CJ,EAAA4B,OAAOJ,OAINK,WAELlB,SAASmB,cAAc,IAAItB,KAAKJ,MAAMwB,UAI1C,MAAMG,EAAQ/B,EAAAyB,IAAIC,EAAAC,GAAI,kBACtB,IAAIK,EAAuB,GAC3BhC,EAAAiC,QAAQF,GAAQG,IAEd,MAAMC,EAAcD,EAASE,MAC7B,IAAK,MAAM9B,KAAW0B,EAEpB1B,EAAQuB,WAEVG,EAAW,GAEX,IAAK,MAAMK,KAAOF,EAEhBH,EAASM,KACP,IAAIpC,EACFmC,EACAF,EAAaE,GAAME,KACnBJ,EAAaE,GAAM/B,QACnB6B,EAAaE,GAAM9B,aAkE3B,WAEE,MAAMiC,EAAI7B,SAASC,eAAe,iBAClC4B,EAAEC,UAAYD,EAAEE,aAhEhBC,GAiBIR,GAfJ,WAEE,MAAMS,EAAeC,OAAOC,OAAOX,GAC7BY,EAASF,OAAOG,KAAKb,GAAc,GACzC,IAAK,IAAIc,EAAI,EAAGA,EAAIL,EAAaM,OAAQD,IAEvC,GAAIL,EAAaM,OAAS,GAC1B,CAEE,MAAMC,EAAOnD,EAAAyB,IAAIC,EAAAC,GAAI,iBAAmBoB,GACxC/C,EAAA4B,OAAOuB,IAOXC,MAIkC,MAAlC/B,eAAeC,QAAQ,QAEzBX,SAASC,eAAe,QAAQyC,MAAMC,WAAa,UAKnD3C,SAASC,eAAe,QAAQyC,MAAMC,WAAa,UACnD3C,SAASC,eAAe,QAAQW,iBAAiB,SAAUiB,IAEzDA,EAAEe,iBACF,MAAMjD,EAAUK,SAASC,eAAe,eAElC4C,EAAO,IAAIC,KACXC,EAAe,CACnBnD,UACEiD,EAAKG,cACL,KACCH,EAAKI,WAAa,GACnB,IACAJ,EAAKK,aACL,MACAL,EAAKM,WACL,IACAN,EAAKO,aACL,KAEFxB,KAAMlB,eAAeC,QAAQ,QAC7BhB,QAASA,EAAQ0D,OAIbC,EAAa,GACnBA,EAFuBjE,EAAAsC,KAAKP,GAAOM,KAEZqB,EAEvB1D,EAAAkE,OAAOnC,EAAOkC,OAQlBE,EAAAC","sources":["src/modules/messagesGames.ts"],"sourcesContent":["import { ref, remove, update, onValue, push } from \"firebase/database\";\nimport { db } from \"./firebaseApp\";\nimport { logOut } from \"./logout\";\n\nexport class Messages\n{\n  constructor(\n    public readonly id: string,\n    public readonly userName: string,\n    public readonly message: string,\n    public readonly timeStamp: string\n  )\n  {\n    this.displayMsg();\n  }\n  private displayMsg(): void\n  {\n    //The div containing all message-divs\n    const msgWrapper = document.getElementById(\"messagesGames\");\n    //The Div containing one message\n    const msgContainer = document.createElement(\"div\") as HTMLDivElement;\n    msgWrapper.append(msgContainer);\n    //Set the messages ID to the div containing the message\n    msgContainer.classList.add(this.id, \"chat-styling\");\n\n    //Create the userName h4 element\n    const userNameElement = document.createElement(\"h4\") as HTMLHeadElement;\n    //Set the userName and the timeStamp\n    userNameElement.innerText = this.timeStamp + `${this.userName} says ${this.message}`;\n    msgContainer.append(userNameElement);\n\n    //Create the remove button\n    const removeBtn = document.createElement(\"button\") as HTMLButtonElement;\n    removeBtn.innerText = \"X\";\n    //If the logged-in user is the same as message-user; append the remove-button\n    if (this.userName == sessionStorage.getItem(\"user\"))\n    {\n      msgContainer.append(removeBtn);\n    }\n\n    //Remove button event\n    removeBtn.addEventListener(\"click\", () =>\n    {\n      const userName = sessionStorage.getItem(\"user\");\n      //Check if the logged in user is the same as the user that posted the message\n      if (userName == sessionStorage.getItem(\"user\"))\n      {\n        //Set the reference to the post in the database & remove it\n        const msgRef = ref(db, \"/Topics/Games/\" + this.id);\n        remove(msgRef);\n      }\n    });\n  }\n  public clearDOM(): void\n  {\n    document.querySelector(`.${this.id}`).remove();\n  }\n}\n//Reference to the current topic in the database\nconst dbRef = ref(db, \"/Topics/Games/\");\nlet messages: Messages[] = [];\nonValue(dbRef, (snapshot) =>\n{\n  const messageData = snapshot.val();\n  for (const message of messages)\n  {\n    message.clearDOM();\n  }\n  messages = [];\n  //Send all the message data(key) to the database\n  for (const key in messageData)\n  {\n    messages.push(\n      new Messages(\n        key,\n        messageData[ key ].name,\n        messageData[ key ].message,\n        messageData[ key ].timeStamp\n      )\n    );\n  }\n  //Scroll to the bottom\n  scrollDown();\n  //Remove the 26th post\n  function postLimiter(): void\n  {\n    const messageArray = Object.values(messageData);\n    const index0 = Object.keys(messageData)[ 0 ];\n    for (let i = 0; i < messageArray.length; i++)\n    {\n      if (messageArray.length > 25)\n      {\n        //Set the reference to the post in the database & remove it\n        const post = ref(db, \"/Topics/games/\" + index0);\n        remove(post);\n      }\n    }\n  }\n  //Check if theres too many posts\n  if (messageData)\n  {\n    postLimiter();\n  }\n});\n//If theres no logged in user, hide the \"send-button\"\nif (sessionStorage.getItem(\"user\") == null || undefined || \"\")\n{\n  document.getElementById(\"send\").style.visibility = \"hidden\";\n}\nelse\n{\n  //Otherwise, make the button visible\n  document.getElementById(\"send\").style.visibility = \"visible\";\n  document.getElementById(\"send\").addEventListener(\"click\", (e) =>\n  {\n    e.preventDefault();\n    const message = document.getElementById(\"userMessage\") as HTMLInputElement;\n    //Set the current timestamp\n    const date = new Date();\n    const messageToAdd = {\n      timeStamp:\n        date.getFullYear() +\n        \" \" +\n        (date.getMonth() + 1) +\n        \"/\" +\n        date.getUTCDate() +\n        \" - \" +\n        date.getHours() +\n        \":\" +\n        date.getMinutes() +\n        \": \",\n      //Get  the logged-in user\n      name: sessionStorage.getItem(\"user\"),\n      message: message.value,\n    };\n\n    const newKey: string = push(dbRef).key;\n    const newMessage = {};\n    newMessage[ newKey ] = messageToAdd;\n    //Update the database with the message data\n    update(dbRef, newMessage);\n  });\n}\nfunction scrollDown(): void\n{\n  const e = document.getElementById(\"messagesGames\");\n  e.scrollTop = e.scrollHeight;\n}\nlogOut();"],"names":["$8tedJ","parcelRequire","$2a1f9de3251dfcd7$export$ceaacf8b390a3600","constructor","id","userName","message","timeStamp","this","displayMsg","msgWrapper","document","getElementById","msgContainer","createElement","append","classList","add","userNameElement","innerText","removeBtn","sessionStorage","getItem","addEventListener","msgRef","ref","$7McF0","db","remove","clearDOM","querySelector","$2a1f9de3251dfcd7$var$dbRef","$2a1f9de3251dfcd7$var$messages","onValue","snapshot","messageData","val","key","push","name","e","scrollTop","scrollHeight","$2a1f9de3251dfcd7$var$scrollDown","messageArray","Object","values","index0","keys","i","length","post","postLimiter","style","visibility","preventDefault","date","Date","messageToAdd","getFullYear","getMonth","getUTCDate","getHours","getMinutes","value","newMessage","update","$9Mg9r","logOut"],"version":3,"file":"forumGames.46cca2f6.js.map"}